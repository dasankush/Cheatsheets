 GIT COMMANDS:


git add .
git add index.html
git clone git@address
git commit -m "added index.html" -m "some description"
git commit -am "commit message" // only works for modified

git status



git push -u origin HEAD:master
git push -u origin branchname
git branch //shows branches
git diff branchname //shows the difference between branches
git merge branchname
git log // gives log of all commits
git rm --cached -r //remove all the files from commit stage



#commiting a change: || #pushing on github
$git add .
$git status
$git commit -m "added index.html"
$git push origin HEAD:master



#create and switch to a new branch:cae      
git checkout -b branchname(make it very descriptive)



#switch between branches:
git checkout branchname



#pull request:
git pull origin branchname



#delete a branch:
git branch -d branchname



#undoing in git:
git reset filename || git reset HEAD~1
git reset --hard hashvalue



#files
git config --global user.name "your name"
git config --global user.email "you@example.com"
git config --list
git config user.email //snyc with email
git config user.name //snyc with name of github acc
git help
git help 'keyword'
git rm    // Remove files from the working tree and from the index



#creating a new SSH key:
$ ssh-keygen -t rsa -b 4096 -C "example@email.com"
$ ls | grep testkey
testkey
testkey.pub
$ cat testkey.pub
 //will generate a key which you will have to add to a new SSH key in your github account




# GIT ALIASES -----------------------------------------------------------------
These aliases are accessible only through bash shell, to get more git aliases go to https://github.com/andrew8088/dotfiles/blob/main/zsh/aliases.zsh aliases.zsh in zsh of dotenv repo(starred) of andrew8088 on github

To view and edit git aliases from bash shell, 
Go to "vim ~.bash_profile"
Edit the file by pressing your [i] button. This will put you in '-- INSERT --' mode
Press CTRL+c to go out of insert mode
Press wq! to save changes and qa! to not save changes


alias gi='git init'
alias guint='rm -rf .git'
alias ga='git add'
alias gc='git commit'
alias gco='git checkout'
alias gb='git branch'
alias gba='git branch --all'
alias gbd='git branch -D'
alias gcp='git cherry-pick'
alias gd='git diff -w'
alias gds='git diff -w --staged'
alias grs='git restore --staged'
alias gst='git rev-parse --git-dir > /dev/null 2>&1 && git status || exa'
alias gu='git reset --soft HEAD~1'
alias gpr='git remote prune origin'
alias ff='gpr && git pull --ff-only'
alias grd='git fetch origin && git rebase origin/master'
alias gbb='git-switchbranch'
alias gbf='git branch | head -1 | xargs' # top branch
#alias gl=pretty_git_log
#alias gla=pretty_git_log_all
alias gl="git log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(white)%s%C(reset) %C(green)%an %ar %C(reset) %C(bold magenta)%d%C(reset)'"
alias gla="git log --all --graph --format=format:'%C(bold blue)%h%C(reset) - %C(white)%s%C(reset) %C(bold magenta)%d%C(reset)'"
alias git-current-branch="git branch | grep \* | cut -d ' ' -f2"
alias grc='git rebase --continue'
alias gra='git rebase --abort'
alias gec='git status | grep "both modified:" | cut -d ":" -f 2 | trim | xargs nvim -'
alias gcan='gc --amend --no-edit'

alias gp="git push -u 2>&1 | tee >(cat) | grep \"pull/new\" | awk '{print \$2}' | xargs open"
alias gpf='git push --force-with-lease'
alias gpu="git push -u origin main"

alias gbdd='git-branch-utils -d'
alias gbuu='git-branch-utils -u'
alias gbrr='git-branch-utils -r -b develop'
alias gg='git branch | fzf | xargs git checkout'
alias gup='git branch --set-upstream-to=origin/$(git-current-branch) $(git-current-branch)'

alias gnext='git log --ancestry-path --format=%H ${commit}..master | tail -1 | xargs git checkout'
alias gprev='git checkout HEAD^'
